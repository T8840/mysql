(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{439:function(_,v,r){"use strict";r.r(v);var n=r(2),l=Object(n.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"数据库设计规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计规范"}},[_._v("#")]),_._v(" 数据库设计规范")]),_._v(" "),v("h3",{attrs:{id:"数据库命名规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库命名规范"}},[_._v("#")]),_._v(" 数据库命名规范")]),_._v(" "),v("ul",[v("li",[_._v("所有数据库对象名称必须使用小写字母并用下划线分割。"),v("br"),_._v("\n数据库名与表名认为大小写是不同的标识。")]),_._v(" "),v("li",[_._v("所有数据库对象名称禁止使用MySQL保留关键字")]),_._v(" "),v("li",[_._v("数据库对象的命名要能做到见名识意，并且最好不要超过32个字符。"),v("br"),_._v("\n如：用户账号表user_account")]),_._v(" "),v("li",[_._v("临时库表必须以tmp为前缀并以日期为后缀")]),_._v(" "),v("li",[_._v("备份库表必须以bak为前缀并以日期为后缀")]),_._v(" "),v("li",[_._v("所有存储相同数据的列名和列类型必须一致")])]),_._v(" "),v("h3",{attrs:{id:"数据库基本设计规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库基本设计规范"}},[_._v("#")]),_._v(" 数据库基本设计规范")]),_._v(" "),v("ul",[v("li",[_._v("所有表必须使用Innodb存储引擎")]),_._v(" "),v("li",[_._v("数据库和表的字符集统一使用UTF8"),v("br"),_._v("\n统一字符集可以避免由于字符集转换产生的乱码；MySQL中UTF8字符集汉字占3个字节，ASCII码占用1个字节")]),_._v(" "),v("li",[_._v("所有的表和字段都需要添加注释"),v("br"),_._v("\n使用comment从句添加表和列的备注，从一开始就进行数据字典的维护。")]),_._v(" "),v("li",[_._v("尽量控制单表数据量的大小，建议控制在500w以内。"),v("br"),_._v("\n500w并不是MySQL数据库限制，MySQL最多可以存储多少w数据取决于存储设置和文件系统。可以用历史数据归档，分库分表等手段来控制数据量大小。")]),_._v(" "),v("li",[_._v("谨慎使用MySQL分区表"),v("br"),_._v("\n分区表在物理上表现为多个文件，在逻辑上表现为一个表。谨慎选择分区键，跨分区查询效率可能更低。建议采用物理分表的方式管理大数据。")]),_._v(" "),v("li",[_._v("尽量做到冷热数据分离，减小表的宽度"),v("br"),_._v("\nMySQL限制表中最多列数为4096列。目的为了减少磁盘IO，保证热数据的内存缓存命中率。更有效的利用缓存，避免读入无用的冷数据。经常一起使用的列放到一个表中。")]),_._v(" "),v("li",[_._v("禁止在表中建立预留字段"),v("br"),_._v("\n预留字段的命名很难做到见名识意；预留字段无法确认存储的数据类型，所以无法选择合适的类型。对预留字段类型的修改，会对表进行锁定。")]),_._v(" "),v("li",[_._v("禁止在数据库中存储图片，文件等二进制数据")]),_._v(" "),v("li",[_._v("禁止在线上做数据库压力测试")]),_._v(" "),v("li",[_._v("禁止从开发环境，测试环境直接连接生产环境数据库")])]),_._v(" "),v("h3",{attrs:{id:"数据库索引设计规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库索引设计规范"}},[_._v("#")]),_._v(" 数据库索引设计规范")]),_._v(" "),v("ul",[v("li",[_._v("不要滥用索引，限制每张表上的索引数量，建议单张表索引不超过5个"),v("br"),_._v("\n索引可以提高效率同样也可以降低效率；禁止给表中的每一列都建立单独的索引。")]),_._v(" "),v("li",[_._v("每个InnoDB表都必须有一个主键"),v("br"),_._v("\n不使用更新频繁的列作为主键，不使用多列主键。"),v("br"),_._v("\n不使用UUID，MD5，HASH，字符串列作为主键。")]),_._v(" "),v("li",[_._v("在哪些列上建立索引"),v("br"),_._v("\n建议在Select、Update、Delete语句的WHERE从句中的列；"),v("br"),_._v("\n包含在ORDER BY、GROUP BY、DISTINCT中的字段；"),v("br"),_._v("\n多表JOIN的关联列.")]),_._v(" "),v("li",[_._v("选择索引列的顺序\n区分度最高的列放在联合索引的最左侧；"),v("br"),_._v("\n尽量把字段长度小的列放在联合索引的最左侧；"),v("br"),_._v("\n使用最频繁的列放到联合索引的左侧。")]),_._v(" "),v("li",[_._v("避免建立冗余索引和重复索引")]),_._v(" "),v("li",[_._v("对于频繁的查询优先考虑使用覆盖索引"),v("br"),_._v("\n覆盖索引可以避免Innodb表进行索引的二次查找，可以把随机IO变为顺序IO加快查询效率。")]),_._v(" "),v("li",[_._v("尽量避免使用外键"),v("br"),_._v("\n不建议使用外键约束，但一定在表与表之间的关联键上建立索引。"),v("br"),_._v("\n外键可用于保证数据的参照完整性，但建议在业务端实现，外键会影响父表和子表的写操作从而降低性能。")])]),_._v(" "),v("h3",{attrs:{id:"数据库字段设计规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库字段设计规范"}},[_._v("#")]),_._v(" 数据库字段设计规范")]),_._v(" "),v("ul",[v("li",[_._v("优先选择符合存储需要的最小的数据类型"),v("br"),_._v("\n将字符串转换为数字类型存储；对于非负数据采用无符号整型进行存储；")]),_._v(" "),v("li",[_._v("避免使用TEXT、BLOB数据类型")]),_._v(" "),v("li",[_._v("避免使用ENUM数据类型")]),_._v(" "),v("li",[_._v("尽可能把所有列定义为NOT NULL"),v("br"),_._v("\n索引NULL列需要额外的空间存储")]),_._v(" "),v("li",[_._v("使用TIMESTAMP或DATETIME类型存储时间"),v("br"),_._v("\nTIMESTAMP占用4字节和INT相同，但比INT可读性高；超出TIMESTAMP取值范围的使用DATETIME类型")]),_._v(" "),v("li",[_._v("同财务相关的金额类数据，必须使用decimal类型"),v("br"),_._v("\n非精准浮点类型：float/double;精准浮点类型：decimal"),v("br"),_._v("\nDecimal类型为精准浮点数，在计算时不会丢失精度。")])]),_._v(" "),v("h3",{attrs:{id:"数据库sql开发规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库sql开发规范"}},[_._v("#")]),_._v(" 数据库SQL开发规范")]),_._v(" "),v("ul",[v("li",[_._v("建议使用预编译语句进行数据库操作"),v("br"),_._v("\n只传参数，比传递SQL语句更高效；相同语句可以一次解析，多次使用，提高处理效率；")]),_._v(" "),v("li",[_._v("避免数据类型的隐式转换"),v("br"),_._v("\n隐式转换会导致索引失效")]),_._v(" "),v("li",[_._v("充分利用表上已经存在的索引"),v("br"),_._v("\n避免使用双%号的查询条件；"),v("br"),_._v("\n一个SQL只能利用到复合索引中的一列进行范围查询；"),v("br"),_._v("\n使用left join或not exists来优化not in操作;")]),_._v(" "),v("li",[_._v("应该要对以后扩展进行考虑")]),_._v(" "),v("li",[_._v("程序连接不同的数据库使用不同的账号，禁止跨库查询")]),_._v(" "),v("li",[_._v("禁止使用SELECT * 必须使用SELECT <字段列表>查询")]),_._v(" "),v("li",[_._v("禁止使用不含字段列表的INSERT语句")]),_._v(" "),v("li",[_._v("避免使用子查询，可以把子查询优化为join查询"),v("br"),_._v("\n子查询的结果集无法使用索引；子查询会产生临时表操作，如果子查询数据量大则严重影响效率，消耗过多的CPU和IO资源")]),_._v(" "),v("li",[_._v("避免使用JOIN关联太多的表"),v("br"),_._v("\n每Join一个表会多占用一部分内存(join_buffer_size)，会产生临时表操作，影响查询效率。MySQL最多允许关联61个表，建议不超过5个")]),_._v(" "),v("li",[_._v("减少同数据库的交互次数"),v("br"),_._v("\n数据库更适合处理批量操作；合并多个相同的操作到一起，可以提高处理效率")]),_._v(" "),v("li",[_._v("使用in代替or")]),_._v(" "),v("li",[_._v("禁止使用order by rand()进行随机排序"),v("br"),_._v("\n这种操作会把表中所有符合条件的数据装载到内存中进行排序会消耗大量的CPU和IO及内存资源；推荐在程序中获取一个随机值，然后从数据库中获取数据的方式")]),_._v(" "),v("li",[_._v("WHERE从句中禁止对列进行函数转换和计算")]),_._v(" "),v("li",[_._v("在明显不会有重复值时使用UNION ALL而不是UNION")]),_._v(" "),v("li",[_._v("拆分复杂的大SQL为多个小SQL"),v("br"),_._v("\nMySQL一个SQL只能使用一个CPU进行计算；SQL拆分后可以通过并行执行来提高处理效率。")])]),_._v(" "),v("h3",{attrs:{id:"数据库操作行为规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作行为规范"}},[_._v("#")]),_._v(" 数据库操作行为规范")]),_._v(" "),v("ul",[v("li",[_._v("超过100万行的批量写操作，要分批多次进行操作。"),v("br"),_._v("\n大批量操作可能会造成严重的主从延迟;"),v("br"),_._v("\nbinlog日志为row格式时会产生大量的日志;"),v("br"),_._v("\n避免产生大事务操作")]),_._v(" "),v("li",[_._v("对大表使用pt-online-schema-change修改表结构"),v("br"),_._v("\n用这种操作可避免大表修改产生的主从延迟，避免在对表字段进行修改时进行锁表。")]),_._v(" "),v("li",[_._v("禁止为程序使用的账号赋予super权限"),v("br"),_._v("\n当达到最大连接数限制时，还允许有1个super权限的用户连接，super权限只能留给DBA处理问题的账号使用。")]),_._v(" "),v("li",[_._v("对于程序连接数据库账号，遵循权限最小原则。"),v("br"),_._v("\n程序使用数据库账号只能在一个DB下使用，不准跨库;"),v("br"),_._v("\n程序使用的账号原则上不准有drop权限。")])])])}),[],!1,null,null,null);v.default=l.exports}}]);